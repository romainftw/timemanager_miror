<module name="shell">
<spec>
  <name>catch_exception</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>catch_exception(Bool) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>Bool</typename><string>Bool = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Bool</anno>
</spec>
<spec>
  <name>get_function</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>get_state</name>
  <arity>0</arity>
  <contract/>
</spec>
<spec>
  <name>history</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>history(N) -&gt; <seetype marker="erlang#non_neg_integer">integer() &gt;= 0</seetype></head>
      <guard>
        <subtype><typename>N</typename><string>N = <seetype marker="erlang#non_neg_integer">integer() &gt;= 0</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>N</anno>
</spec>
<spec>
  <name>local_allowed</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>local_func</name>
  <arity>0</arity>
  <contract/>
</spec>
<spec>
  <name>local_func</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>non_local_allowed</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>prompt_func</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>prompt_func(PromptFunc) -&gt; PromptFunc2</head>
      <guard>
        <subtype><typename>PromptFunc</typename><string>PromptFunc = PromptFunc2 = default | {<seetype marker="erlang#module">module()</seetype>, <seetype marker="erlang#atom">atom()</seetype>}</string></subtype>
        <subtype><typename>PromptFunc2</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>PromptFunc</anno>
  <anno>PromptFunc2</anno>
</spec>
<spec>
  <name>read_and_add_records</name>
  <arity>5</arity>
  <contract/>
</spec>
<spec>
  <name>results</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>results(N) -&gt; <seetype marker="erlang#non_neg_integer">integer() &gt;= 0</seetype></head>
      <guard>
        <subtype><typename>N</typename><string>N = <seetype marker="erlang#non_neg_integer">integer() &gt;= 0</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>N</anno>
</spec>
<spec>
  <name>server</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>server(StartSync :: <seetype marker="erlang#boolean">boolean()</seetype>) -&gt; terminated</head></clause>
  </contract>
  <anno>StartSync</anno>
</spec>
<spec>
  <name>server</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>server(NoCtrlG :: <seetype marker="erlang#boolean">boolean()</seetype>, StartSync :: <seetype marker="erlang#boolean">boolean()</seetype>) -&gt; terminated</head></clause>
  </contract>
  <anno>NoCtrlG</anno>
  <anno>StartSync</anno>
</spec>
<spec>
  <name>start</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>start() -&gt; <seetype marker="erlang#pid">pid()</seetype></head></clause>
  </contract>
</spec>
<spec>
  <name>start</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>start</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>start_interactive</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>start_interactive() -&gt; ok | {error, already_started}</head></clause>
  </contract>
</spec>
<spec>
  <name>start_interactive</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>start_interactive(InitialShell :: noshell | <seetype marker="erlang#mfa">mfa()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok | {error, already_started}</head></clause>
  </contract>
  <anno>InitialShell</anno>
</spec>
<spec>
  <name>start_interactive</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>start_interactive(InitialShell :: {remote, <seetype marker="erlang#string">string()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok | {error, already_started | noconnection}</head></clause>
  </contract>
  <anno>InitialShell</anno>
</spec>
<spec>
  <name>start_interactive</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>start_interactive(InitialShell ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="erlang#node">node()</seetype>, <seetype marker="erlang#mfa">mfa()</seetype>} | {remote, <seetype marker="erlang#string">string()</seetype>, <seetype marker="erlang#mfa">mfa()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{error,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>already_started | noconnection | badfile |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>nofile | on_load_failure}</head></clause>
  </contract>
  <anno>InitialShell</anno>
</spec>
<spec>
  <name>start_restricted</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>start_restricted(Module) -&gt; {error, Reason}</head>
      <guard>
        <subtype><typename>Module</typename><string>Module = <seetype marker="erlang#module">module()</seetype></string></subtype>
        <subtype><typename>Reason</typename><string>Reason = <seetype marker="code#load_error_rsn">code:load_error_rsn()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Module</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>stop_restricted</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>stop_restricted() -&gt; <seetype marker="erlang#no_return">no_return()</seetype></head></clause>
  </contract>
</spec>
<spec>
  <name>strings</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>strings(Strings) -&gt; Strings2</head>
      <guard>
        <subtype><typename>Strings</typename><string>Strings = Strings2 = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
        <subtype><typename>Strings2</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Strings</anno>
  <anno>Strings2</anno>
</spec>
<spec>
  <name>whereis</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>whereis() -&gt; <seetype marker="erlang#pid">pid()</seetype> | undefined</head></clause>
  </contract>
</spec>
<timestamp>Generated by EDoc, May 15 2023, 21:34:26.</timestamp>
</module>