<module name="edlin_expand">
<spec>
  <name>bif</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>expand</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>expand(Bef0) -&gt; {Res, Completion, Matches}</head>
      <guard>
        <subtype><typename>Bef0</typename><string>Bef0 = <seetype marker="erlang#string">string()</seetype></string></subtype>
        <subtype><typename>Res</typename><string>Res = yes | no</string></subtype>
        <subtype><typename>Completion</typename><string>Completion = <seetype marker="erlang#string">string()</seetype></string></subtype>
        <subtype><typename>Matches</typename><string>Matches = [Element] | [Section]</string></subtype>
        <subtype><typename>Element</typename><string>Element = {<seetype marker="erlang#string">string()</seetype>, [ElementOption]}</string></subtype>
        <subtype><typename>ElementOption</typename><string>ElementOption = {ending, <seetype marker="erlang#string">string()</seetype>}</string></subtype>
        <subtype><typename>Section</typename><string>Section = <br/><nbsp/><nbsp/><nbsp/><nbsp/>#{title := <seetype marker="erlang#string">string()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>elems := Matches,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>options := SectionOption}</string></subtype>
        <subtype><typename>SectionOption</typename><string>SectionOption = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{highlight_all} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{highlight, <seetype marker="erlang#string">string()</seetype>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{highlight_param, <seetype marker="erlang#integer">integer()</seetype>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{hide, title} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{hide, result} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{separator, <seetype marker="erlang#string">string()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Bef0</anno>
  <anno>Completion</anno>
  <anno>Element</anno>
  <anno>ElementOption</anno>
  <anno>Matches</anno>
  <anno>Res</anno>
  <anno>Section</anno>
  <anno>SectionOption</anno>
</spec>
<spec>
  <name>expand</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>expand(Bef0, Opts) -&gt; {Res, Completion, Matches}</head>
      <guard>
        <subtype><typename>Bef0</typename><string>Bef0 = <seetype marker="erlang#string">string()</seetype></string></subtype>
        <subtype><typename>Opts</typename><string>Opts = [Option]</string></subtype>
        <subtype><typename>Option</typename><string>Option = {legacy_output, <seetype marker="erlang#boolean">boolean()</seetype>}</string></subtype>
        <subtype><typename>Res</typename><string>Res = yes | no</string></subtype>
        <subtype><typename>Completion</typename><string>Completion = <seetype marker="erlang#string">string()</seetype></string></subtype>
        <subtype><typename>Matches</typename><string>Matches = [Element] | [Section]</string></subtype>
        <subtype><typename>Element</typename><string>Element = {<seetype marker="erlang#string">string()</seetype>, [ElementOption]}</string></subtype>
        <subtype><typename>ElementOption</typename><string>ElementOption = {ending, <seetype marker="erlang#string">string()</seetype>}</string></subtype>
        <subtype><typename>Section</typename><string>Section = <br/><nbsp/><nbsp/><nbsp/><nbsp/>#{title := <seetype marker="erlang#string">string()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>elems := Matches,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>options := SectionOption}</string></subtype>
        <subtype><typename>SectionOption</typename><string>SectionOption = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{highlight_all} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{highlight, <seetype marker="erlang#string">string()</seetype>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{highlight_param, <seetype marker="erlang#integer">integer()</seetype>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{hide, title} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{hide, result} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{separator, <seetype marker="erlang#string">string()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Bef0</anno>
  <anno>Completion</anno>
  <anno>Element</anno>
  <anno>ElementOption</anno>
  <anno>Matches</anno>
  <anno>Option</anno>
  <anno>Opts</anno>
  <anno>Res</anno>
  <anno>Section</anno>
  <anno>SectionOption</anno>
</spec>
<spec>
  <name>expand</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>format_matches</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>get_exports</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>is_type</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>match_arguments1</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>number_matches</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>over_word</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>shell_default_or_bif</name>
  <arity>1</arity>
  <contract/>
</spec>
<timestamp>Generated by EDoc, May 15 2023, 21:34:19.</timestamp>
</module>